/****************************************
 * Description: This is API controller is for List instance of JSON
 ******************************************/
 // TO test we can use workbench --  /services/apexrest/caseAPI?cmd=createCase
 
@RestResource(urlMapping = '/caseAPI/*')
global class LRestApiController // name can be changed
{
    //This is called when a HTTP GET request is sent
    @HttpGet
    global static IValueObject doGet()
    {
        return submit();
    }
    
    //This is called when a HTTP Post request is sent
    @HttpPost
    global static IValueObject doPost()
    {
        return submit();
    }
    
    //This is to execute the command class based on the cmd parameter from request body or request parameters 
    global static IValueObject submit()
    {
        ICommand command;
        Boolean isCaseModel = false;
        Object result;
        List<Object> lstResult;
        RestRequest req = RestContext.request;
        Restresponse res = RestContext.response;
        res.addHeader('Content-Type', 'application/json');
        String commandName;     
        commandName = req.params.get('cmd');
        system.debug(commandName);       
        try {
            if (req.requestBody != null && string.isNotBlank(req.requestBody.toString())) {                
                List<Map<String, String>> lstMapReqs = (List<Map<String, String>>) JSON.deserialize(req.requestBody.tostring(), List<Map<String, String>>.class);
                Map<String, Object> resultMap = new Map<String, Object>();
                lstResult = new List<Object>();                
                for(Map<String, String> mapReq:lstMapReqs){
                    command = CommandFactory.getCommand(commandName, mapReq);
                    command.validate();
                    command.execute();
                    system.debug('result:' + command.getResult());
                    result = command.getResult();
                    if(result instanceof CaseAPIModel){
                        isCaseModel = true;
                    }
                    lstResult.add(command.getResult());
                }                
            }
            else {              
                command = CommandFactory.getCommand(commandName, req.params);
                command.validate();
                command.execute();
                result = command.getResult();
                system.debug('result:' + result);
            }
            system.debug('command:' + command);
        }
        catch(Exception ex) {
            system.debug('LRestApiController-createCaseCommand->>'+ex.getMessage()); // Example
            return new HCErrorModel(ex.getMessage());
        }
        if (command instanceof IPageable) {
            IPageable p = (IPageable) command;
            if(result != null) {
                return new PageableRestSuccessModel(result, p.getPagination());
            }
            else{
                return new PageableRestSuccessModel(lstResult, p.getPagination());
            }            
        }
        if(result != null){
            if(!isCaseModel){
                return new RestSuccessModel(result);
            }else{
                CaseAPIModel caseModel = (CaseAPIModel) result;
                //return new RestSuccessModel(result);
                if(caseModel.statusMessage != 'Success'){
                        return new RestErrorAuraModel(result);
                }else{
                    return new RestSuccessModel(result);
                }
            }
        }
        else{
            return new RestSuccessModel(lstResult);
        }      
    }
    public Object getX(String param_name){
        String json_instance = Json.serialize(this);
        Map<String, Object> untyped_instance;
        untyped_instance= (Map<String, Object>)JSON.deserializeUntyped(json_instance);
        return untyped_instance.get(param_name);
    }
}
